# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-07 12:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0018_auto_20170207_1156'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_loaded', models.BooleanField(default=False)),
                ('data_loaded_date', models.DateTimeField(blank=True, null=True)),
                ('sequencing_type', models.CharField(choices=[(b'WES', b'Exome'), (b'WGS', b'Whole Genome'), (b'RNA', b'RNA')], max_length=3)),
                ('genome_build_id', models.CharField(choices=[(b'b37', b'b37'), (b'b38', b'b38')], default=b'b37', max_length=5)),
                ('path', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_view', 'can_view'), ('can_edit', 'can_edit'), ('is_owner', 'is_owner')),
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('family_id', models.CharField(db_index=True, max_length=100)),
                ('display_name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pedigree_image', models.ImageField(blank=True, null=True, upload_to=b'pedigree_images')),
                ('analysis_notes', models.TextField(blank=True, null=True)),
                ('analysis_summary', models.TextField(blank=True, null=True)),
                ('causal_inheritance_mode', models.CharField(choices=[(b'u', b'unknown'), (b'd', b'dominant'), (b'x', b'x-linked recessive'), (b'n', b'de novo'), (b'r', b'recessive')], default=b'u', max_length=20)),
                ('analysis_status', models.CharField(choices=[(b'S', b'S'), (b'S_kgfp', b'S'), (b'S_kgdp', b'S'), (b'S_ng', b'S'), (b'Sc_kgfp', b'S'), (b'Sc_kgdp', b'S'), (b'Sc_ng', b'S'), (b'Rcpc', b'R'), (b'Rncc', b'R'), (b'I', b'A'), (b'Q', b'W')], default=b'Q', max_length=10)),
                ('internal_analysis_status', models.CharField(blank=True, choices=[(b'S', b'S'), (b'S_kgfp', b'S'), (b'S_kgdp', b'S'), (b'S_ng', b'S'), (b'Sc_kgfp', b'S'), (b'Sc_kgdp', b'S'), (b'Sc_ng', b'S'), (b'Rcpc', b'R'), (b'Rncc', b'R'), (b'I', b'A'), (b'Q', b'W')], max_length=10, null=True)),
                ('internal_case_review_notes', models.TextField(blank=True, null=True)),
                ('internal_case_review_brief_summary', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('individual_id', models.TextField()),
                ('maternal_id', models.TextField(blank=True, null=True)),
                ('paternal_id', models.TextField(blank=True, null=True)),
                ('sex', models.CharField(choices=[(b'M', b'Male'), (b'F', b'Female'), (b'U', b'Unknown')], default=b'U', max_length=1)),
                ('affected', models.CharField(choices=[(b'A', b'Affected'), (b'N', b'Unaffected'), (b'U', b'Unknown')], default=b'U', max_length=1)),
                ('display_name', models.TextField(blank=True, default=b'')),
                ('case_review_status', models.CharField(blank=True, choices=[(b'U', b'Uncertain'), (b'A', b'Accepted: Platform Uncertain'), (b'E', b'Accepted: Exome'), (b'G', b'Accepted: Genome'), (b'3', b'Accepted: RNA-seq'), (b'R', b'Not Accepted'), (b'H', b'Hold'), (b'Q', b'More Info Needed')], max_length=1, null=True)),
                ('case_review_status_last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('case_review_requested_info', models.TextField(blank=True, null=True)),
                ('phenotips_patient_id', models.CharField(blank=True, max_length=30, null=True)),
                ('phenotips_eid', models.CharField(blank=True, max_length=165, null=True)),
                ('phenotips_data', models.TextField(blank=True, null=True)),
                ('mme_id', models.CharField(blank=True, max_length=50, null=True)),
                ('mme_submitted_data', models.TextField(blank=True, null=True)),
                ('case_review_status_last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Family')),
            ],
        ),
        migrations.CreateModel(
            name='LocusList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_view', 'can_view'), ('can_edit', 'can_edit'), ('is_owner', 'is_owner')),
            },
        ),
        migrations.CreateModel(
            name='LocusListEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('genome_build_id', models.CharField(choices=[(b'b37', b'b37'), (b'b38', b'b38')], default=b'b37', max_length=5)),
                ('feature_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('chrom', models.CharField(blank=True, max_length=2, null=True)),
                ('start', models.IntegerField(blank=True, null=True)),
                ('end', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('include_or_exclude_by_default', models.CharField(choices=[(b'+', b'include'), (b'-', b'exclude')], default=b'+', max_length=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.LocusList')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_phenotips_enabled', models.BooleanField(default=False)),
                ('phenotips_user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_mme_enabled', models.BooleanField(default=False)),
                ('mme_primary_data_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('deprecated_last_accessed_date', models.DateTimeField(blank=True, null=True)),
                ('deprecated_project_id', models.TextField(blank=True, default=b'')),
                ('can_edit_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='auth.Group')),
                ('can_view_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='auth.Group')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('custom_reference_populations', models.ManyToManyField(blank=True, related_name='_project_custom_reference_populations_+', to='base.ReferencePopulation')),
                ('owners_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='auth.Group')),
            ],
            options={
                'permissions': (('can_view', 'can_view'), ('can_edit', 'can_edit'), ('is_owner', 'is_owner')),
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(db_index=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(to='seqr.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectLastAccessedDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_accessed_date', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SequencingSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('sample_id', models.TextField()),
                ('individual_id', models.TextField(blank=True, null=True)),
                ('sample_status', models.CharField(choices=[(b'S', b'In Sequencing'), (b'I', b'Interim'), (b'C', b'Complete'), (b'A', b'Abandoned')], default=b'S', max_length=1)),
                ('bam_path', models.TextField(blank=True, null=True)),
                ('picard_metrics_directory', models.TextField(blank=True, null=True)),
                ('TOTAL_READS', models.IntegerField(blank=True, null=True)),
                ('PF_READS', models.IntegerField(blank=True, null=True)),
                ('PCT_PF_UQ_READS', models.FloatField(blank=True, null=True)),
                ('PCT_PF_UQ_READS_ALIGNED', models.FloatField(blank=True, null=True)),
                ('PCT_SELECTED_BASES', models.FloatField(blank=True, null=True)),
                ('MEAN_TARGET_COVERAGE', models.FloatField(blank=True, null=True)),
                ('MEDIAN_TARGET_COVERAGE', models.FloatField(blank=True, null=True)),
                ('GQ0_FRACTION', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_10X', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_20X', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_30X', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_40X', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_50X', models.FloatField(blank=True, null=True)),
                ('PCT_TARGET_BASES_100X', models.FloatField(blank=True, null=True)),
                ('HS_LIBRARY_SIZE', models.FloatField(blank=True, null=True)),
                ('AT_DROPOUT', models.FloatField(blank=True, null=True)),
                ('GC_DROPOUT', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seqr.Dataset')),
            ],
        ),
        migrations.CreateModel(
            name='VariantAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('genome_build_id', models.CharField(choices=[(b'b37', b'b37'), (b'b38', b'b38')], default=b'b37', max_length=5)),
                ('xpos_start', models.BigIntegerField()),
                ('xpos_end', models.BigIntegerField()),
                ('ref', models.TextField()),
                ('alt', models.TextField()),
                ('gene_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('transcript_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('molecular_consequence', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VariantNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('genome_build_id', models.CharField(choices=[(b'b37', b'b37'), (b'b38', b'b38')], default=b'b37', max_length=5)),
                ('xpos_start', models.BigIntegerField()),
                ('xpos_end', models.BigIntegerField()),
                ('ref', models.TextField()),
                ('alt', models.TextField()),
                ('gene_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('transcript_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('molecular_consequence', models.CharField(blank=True, max_length=100, null=True)),
                ('search_parameters', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='seqr.Family')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='seqr.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariantTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('genome_build_id', models.CharField(choices=[(b'b37', b'b37'), (b'b38', b'b38')], default=b'b37', max_length=5)),
                ('xpos_start', models.BigIntegerField()),
                ('xpos_end', models.BigIntegerField()),
                ('ref', models.TextField()),
                ('alt', models.TextField()),
                ('search_parameters', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='seqr.Family')),
                ('variant_annotation', models.ManyToManyField(to='seqr.VariantAnnotation')),
            ],
        ),
        migrations.CreateModel(
            name='VariantTagType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default=b'#1f78b4', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Project')),
            ],
        ),
        migrations.AddField(
            model_name='varianttag',
            name='variant_tag_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.VariantTagType'),
        ),
        migrations.AddField(
            model_name='individual',
            name='sequencing_samples',
            field=models.ManyToManyField(to='seqr.SequencingSample'),
        ),
        migrations.AddField(
            model_name='family',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='varianttagtype',
            unique_together=set([('project', 'name', 'color')]),
        ),
        migrations.AlterUniqueTogether(
            name='varianttag',
            unique_together=set([('variant_tag_type', 'genome_build_id', 'xpos_start', 'xpos_end', 'ref', 'alt', 'family')]),
        ),
        migrations.AlterIndexTogether(
            name='varianttag',
            index_together=set([('xpos_start', 'ref', 'alt', 'genome_build_id')]),
        ),
        #migrations.AlterUniqueTogether(
        #    name='variantannotation',
        #    unique_together=set([('genome_build_id', 'xpos_start', 'xpos_end', 'ref', 'alt')]),
        #),
        #migrations.AlterIndexTogether(
        #    name='variantannotation',
        #    index_together=set([('xpos_start', 'ref', 'alt', 'genome_build_id')]),
        #),
        migrations.AlterUniqueTogether(
            name='sequencingsample',
            unique_together=set([('dataset', 'sample_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='locuslistentry',
            unique_together=set([('parent', 'genome_build_id', 'feature_id', 'chrom', 'start', 'end')]),
        ),
        migrations.AlterUniqueTogether(
            name='individual',
            unique_together=set([('family', 'individual_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='family',
            unique_together=set([('project', 'family_id')]),
        ),
    ]
