# Generated by Django 3.1.13 on 2021-08-26 17:48

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone

from collections import defaultdict


def create_family_note_models(apps, schema_editor):
    Family = apps.get_model('seqr', 'Family')
    FamilyNote = apps.get_model('seqr', 'FamilyNote')
    db_alias = schema_editor.connection.alias

    note_families =  Family.objects.using(db_alias).exclude(
        models.Q(models.Q(analysis_notes__isnull=True) | models.Q(analysis_notes__exact='')),
        models.Q(models.Q(analysis_summary__isnull=True) | models.Q(analysis_summary__exact='')),
        models.Q(models.Q(mme_notes__isnull=True) | models.Q(mme_notes__exact='')),
    )
    if not note_families:
        return

    print('Updating notes for {} families'.format(len(note_families)), None)

    notes = []
    for family in note_families:
        if family.analysis_notes:
            notes.append(FamilyNote(family=family, note=family.analysis_notes, note_type='C'))
        if family.analysis_summary:
            notes.append(FamilyNote(family=family, note=family.analysis_summary, note_type='A'))
        if family.mme_notes:
            notes.append(FamilyNote(family=family, note=family.mme_notes, note_type='M'))
    for i, note in enumerate(notes):
        note.guid = 'FAN{:06d}_{}_{}_{}'.format(i, note.family.family_id, note.note_type, note.note)[:30]

    print('Create {} family notes'.format(len(notes)), None)
    FamilyNote.objects.using(db_alias).bulk_create(notes)
    print('Done')


NOTE_FIELD_MAP = {
    'C': 'analysis_notes',
    'A': 'analysis_summary',
    'M': 'mme_notes',
}

def revert_family_note_models(apps, schema_editor):
    Family = apps.get_model('seqr', 'Family')
    FamilyNote = apps.get_model('seqr', 'FamilyNote')
    db_alias = schema_editor.connection.alias

    notes = FamilyNote.objects.using(db_alias).all()
    if not notes:
        return

    print('Migrating {} family notes'.format(len(notes)))
    notes_by_family = defaultdict(list)
    for note in notes:
        notes_by_family[note.family.id].append(note)

    families = Family.objects.using(db_alias).filter(id__in=list(notes_by_family.keys()))
    print('Updating {} families'.format(len(families)))
    for family in families:
        for note in notes_by_family[family.id]:
            setattr(family, NOTE_FIELD_MAP[note.note_type], note.note)
        family.save()
    print('Done')


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('seqr', '0028_auto_20210826_1528'),
    ]

    operations = [
        migrations.CreateModel(
            name='FamilyNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('note', models.TextField()),
                ('note_type', models.CharField(choices=[('M', 'mme'), ('C', 'case'), ('A', 'analysis')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.family')),
            ],
        ),
        migrations.RunPython(create_family_note_models, reverse_code=revert_family_note_models),
        migrations.RemoveField(
            model_name='family',
            name='analysis_notes',
        ),
        migrations.RemoveField(
            model_name='family',
            name='analysis_summary',
        ),
        migrations.RemoveField(
            model_name='family',
            name='mme_notes',
        ),
    ]
