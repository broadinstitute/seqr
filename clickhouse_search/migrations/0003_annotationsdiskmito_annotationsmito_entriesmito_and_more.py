# Generated by Django 4.2.21 on 2025-06-13 00:44

import clickhouse_backend.models
import clickhouse_search.backend.engines
import clickhouse_search.backend.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('clickhouse_search', '0002_annotationsdiskgrch37snvindel_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntriesMito',
            fields=[
                ('key', models.ForeignKey(db_column='key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='clickhouse_search.annotationsmito')),
                ('project_guid', clickhouse_backend.models.StringField(low_cardinality=True)),
                ('family_guid', clickhouse_backend.models.StringField()),
                ('sample_type', clickhouse_backend.models.Enum8Field(choices=[(1, 'WES'), (2, 'WGS')])),
                ('xpos', clickhouse_search.backend.fields.UInt64FieldDeltaCodecField()),
                ('filters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(low_cardinality=True))),
                ('calls', clickhouse_backend.models.ArrayField(base_field=clickhouse_search.backend.fields.NamedTupleField(base_fields=[('sampleId', clickhouse_backend.models.StringField()), ('gt', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'REF'), (1, 'HET'), (2, 'HOM')], null=True)), ('dp', clickhouse_backend.models.UInt16Field(blank=True, null=True)), ('hl', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mitoCn', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('contamination', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))]))),
                ('sign', clickhouse_backend.models.Int8Field()),
            ],
            options={
                'db_table': 'GRCh38/MITO/entries',
                'abstract': False,
                'engine': clickhouse_search.backend.engines.CollapsingMergeTree('sign', deduplicate_merge_projection_mode='rebuild', index_granularity=8192, order_by=('project_guid', 'family_guid', 'sample_type', 'key'), partition_by='project_guid'),
                'projection': clickhouse_search.models.Projection('xpos_projection', order_by='xpos'),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ClinvarMito',
            fields=[
                ('key', models.ForeignKey(db_column='key', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='clinvar_join', serialize=False, to='clickhouse_search.entriesmito')),
                ('allele_id', clickhouse_backend.models.UInt32Field(blank=True, db_column='alleleId', null=True)),
                ('conflicting_pathogenicities', clickhouse_search.backend.fields.NestedField(base_fields=[('pathogenicity', clickhouse_backend.models.Enum8Field(choices=[(0, 'Pathogenic'), (1, 'Pathogenic/Likely_pathogenic'), (2, 'Pathogenic/Likely_pathogenic/Established_risk_allele'), (3, 'Pathogenic/Likely_pathogenic/Likely_risk_allele'), (4, 'Pathogenic/Likely_risk_allele'), (5, 'Likely_pathogenic'), (6, 'Likely_pathogenic/Likely_risk_allele'), (7, 'Established_risk_allele'), (8, 'Likely_risk_allele'), (9, 'Conflicting_classifications_of_pathogenicity'), (10, 'Uncertain_risk_allele'), (11, 'Uncertain_significance/Uncertain_risk_allele'), (12, 'Uncertain_significance'), (13, 'No_pathogenic_assertion'), (14, 'Likely_benign'), (15, 'Benign/Likely_benign'), (16, 'Benign')])), ('count', clickhouse_backend.models.UInt16Field())], db_column='conflictingPathogenicities', null_when_empty=True)),
                ('gold_stars', clickhouse_backend.models.UInt8Field(blank=True, db_column='goldStars', null=True)),
                ('submitters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField())),
                ('conditions', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField())),
                ('assertions', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.Enum8Field(choices=[(0, 'Affects'), (1, 'association'), (2, 'association_not_found'), (3, 'confers_sensitivity'), (4, 'drug_response'), (5, 'low_penetrance'), (6, 'not_provided'), (7, 'other'), (8, 'protective'), (9, 'risk_factor'), (10, 'no_classification_for_the_single_variant'), (11, 'no_classifications_from_unflagged_records')], return_int=False))),
                ('pathogenicity', clickhouse_backend.models.Enum8Field(choices=[(0, 'Pathogenic'), (1, 'Pathogenic/Likely_pathogenic'), (2, 'Pathogenic/Likely_pathogenic/Established_risk_allele'), (3, 'Pathogenic/Likely_pathogenic/Likely_risk_allele'), (4, 'Pathogenic/Likely_risk_allele'), (5, 'Likely_pathogenic'), (6, 'Likely_pathogenic/Likely_risk_allele'), (7, 'Established_risk_allele'), (8, 'Likely_risk_allele'), (9, 'Conflicting_classifications_of_pathogenicity'), (10, 'Uncertain_risk_allele'), (11, 'Uncertain_significance/Uncertain_risk_allele'), (12, 'Uncertain_significance'), (13, 'No_pathogenic_assertion'), (14, 'Likely_benign'), (15, 'Benign/Likely_benign'), (16, 'Benign')])),
            ],
            options={
                'db_table': 'GRCh38/MITO/clinvar',
                'abstract': False,
                'engine': clickhouse_search.backend.engines.Join('ALL', 'LEFT', 'key', flatten_nested=0, join_use_nulls=1),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
