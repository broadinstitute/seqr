# Generated by Django 4.2.21 on 2025-06-13 00:44

import clickhouse_backend.models
import clickhouse_search.backend.engines
import clickhouse_search.backend.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager

from settings import CLICKHOUSE_IN_MEMORY_DIR, CLICKHOUSE_DATA_DIR


class Migration(migrations.Migration):

    dependencies = [
        ('clickhouse_search', '0002_annotationsdiskgrch37snvindel_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnotationsDiskMito',
            fields=[
                ('key', clickhouse_backend.models.UInt32Field(primary_key=True, serialize=False)),
                ('xpos', clickhouse_backend.models.UInt64Field()),
                ('pos', clickhouse_backend.models.UInt32Field()),
                ('ref', clickhouse_backend.models.StringField()),
                ('alt', clickhouse_backend.models.StringField()),
                ('variant_id', clickhouse_backend.models.StringField(db_column='variantId')),
                ('rsid', clickhouse_backend.models.StringField(blank=True, null=True)),
                ('lifted_over_pos', clickhouse_backend.models.UInt32Field(blank=True, db_column='liftedOverPos', null=True)),
                ('common_low_heteroplasmy', clickhouse_backend.models.BoolField(blank=True, db_column='commonLowHeteroplasmy', null=True)),
                ('mitomap_pathogenic', clickhouse_backend.models.BoolField(blank=True, db_column='mitomapPathogenic', null=True)),
                ('predictions', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('apogee', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('haplogroup_defining', clickhouse_backend.models.BoolField(null=True, blank=True)), ('hmtvar', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mitotip', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'likely_pathogenic'), (1, 'possibly_pathogenic'), (2, 'possibly_benign'), (3, 'likely_benign')], null=True)), ('mut_taster', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'D'), (1, 'A'), (2, 'N'), (3, 'P')], null=True)), ('sift', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mlc', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))])),
                ('populations', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('gnomad_mito', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('gnomad_mito_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))])), ('helix', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('helix_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))]))])),
                ('sorted_transcript_consequences', clickhouse_search.backend.fields.NestedField(base_fields=[('aminoAcids', clickhouse_backend.models.StringField(blank=True, null=True)), ('biotype', clickhouse_backend.models.StringField(blank=True, null=True)), ('canonical', clickhouse_backend.models.UInt8Field(blank=True, null=True)), ('codons', clickhouse_backend.models.StringField(blank=True, null=True)), ('consequenceTerms', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True))), ('geneId', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsc', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsp', clickhouse_backend.models.StringField(blank=True, null=True)), ('loftee', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('isLofNagnag', clickhouse_backend.models.BoolField(blank=True, null=True)), ('lofFilters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(blank=True, null=True)))])), ('majorConsequence', clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True)), ('transcriptId', clickhouse_backend.models.StringField()), ('transcriptRank', clickhouse_backend.models.UInt8Field())], db_column='sortedTranscriptConsequences', group_by_key='geneId')),
            ],
            options={
                'db_table': 'GRCh38/MITO/annotations_disk',
                'engine': clickhouse_search.backend.engines.EmbeddedRocksDB(0, f'{CLICKHOUSE_DATA_DIR}/GRCh38/MITO/annotations', flatten_nested=0, primary_key='key'),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationsMito',
            fields=[
                ('key', clickhouse_backend.models.UInt32Field(primary_key=True, serialize=False)),
                ('xpos', clickhouse_backend.models.UInt64Field()),
                ('pos', clickhouse_backend.models.UInt32Field()),
                ('ref', clickhouse_backend.models.StringField()),
                ('alt', clickhouse_backend.models.StringField()),
                ('variant_id', clickhouse_backend.models.StringField(db_column='variantId')),
                ('rsid', clickhouse_backend.models.StringField(blank=True, null=True)),
                ('lifted_over_pos', clickhouse_backend.models.UInt32Field(blank=True, db_column='liftedOverPos', null=True)),
                ('common_low_heteroplasmy', clickhouse_backend.models.BoolField(blank=True, db_column='commonLowHeteroplasmy', null=True)),
                ('mitomap_pathogenic', clickhouse_backend.models.BoolField(blank=True, db_column='mitomapPathogenic', null=True)),
                ('predictions', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('apogee', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('haplogroup_defining', clickhouse_backend.models.BoolField(null=True, blank=True)), ('hmtvar', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mitotip', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'likely_pathogenic'), (1, 'possibly_pathogenic'), (2, 'possibly_benign'), (3, 'likely_benign')], null=True)), ('mut_taster', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'D'), (1, 'A'), (2, 'N'), (3, 'P')], null=True)), ('sift', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mlc', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))])),
                ('populations', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('gnomad_mito', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('gnomad_mito_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))])), ('helix', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('helix_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))]))])),
                ('sorted_transcript_consequences', clickhouse_search.backend.fields.NestedField(base_fields=[('aminoAcids', clickhouse_backend.models.StringField(blank=True, null=True)), ('biotype', clickhouse_backend.models.StringField(blank=True, null=True)), ('canonical', clickhouse_backend.models.UInt8Field(blank=True, null=True)), ('codons', clickhouse_backend.models.StringField(blank=True, null=True)), ('consequenceTerms', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True))), ('geneId', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsc', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsp', clickhouse_backend.models.StringField(blank=True, null=True)), ('loftee', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('isLofNagnag', clickhouse_backend.models.BoolField(blank=True, null=True)), ('lofFilters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(blank=True, null=True)))])), ('majorConsequence', clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True)), ('transcriptId', clickhouse_backend.models.StringField()), ('transcriptRank', clickhouse_backend.models.UInt8Field())], db_column='sortedTranscriptConsequences', group_by_key='geneId')),
            ],
            options={
                'db_table': 'GRCh38/MITO/annotations_memory',
                'engine': clickhouse_search.backend.engines.EmbeddedRocksDB(0, f'{CLICKHOUSE_IN_MEMORY_DIR}/GRCh38/MITO/annotations', flatten_nested=0, primary_key='key'),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='EntriesMito',
            fields=[
                ('key', models.ForeignKey(db_column='key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='clickhouse_search.annotationsmito')),
                ('project_guid', clickhouse_backend.models.StringField(low_cardinality=True)),
                ('family_guid', clickhouse_backend.models.StringField()),
                ('sample_type', clickhouse_backend.models.Enum8Field(choices=[(1, 'WES'), (2, 'WGS')])),
                ('xpos', clickhouse_search.backend.fields.UInt64FieldDeltaCodecField()),
                ('filters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(low_cardinality=True))),
                ('calls', clickhouse_backend.models.ArrayField(base_field=clickhouse_search.backend.fields.NamedTupleField(base_fields=[('sampleId', clickhouse_backend.models.StringField()), ('gt', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'REF'), (1, 'HET'), (2, 'HOM')], null=True)), ('dp', clickhouse_backend.models.UInt16Field(blank=True, null=True)), ('hl', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mitoCn', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('contamination', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))]))),
                ('sign', clickhouse_backend.models.Int8Field()),
            ],
            options={
                'db_table': 'GRCh38/MITO/entries',
                'abstract': False,
                'engine': clickhouse_search.backend.engines.CollapsingMergeTree('sign', deduplicate_merge_projection_mode='rebuild', index_granularity=8192, order_by=('project_guid', 'family_guid', 'sample_type', 'key'), partition_by='project_guid'),
                'projection': clickhouse_search.models.Projection('xpos_projection', order_by='xpos'),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ClinvarMito',
            fields=[
                ('key', models.ForeignKey(db_column='key', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='clinvar_join', serialize=False, to='clickhouse_search.entriesmito')),
                ('allele_id', clickhouse_backend.models.UInt32Field(blank=True, db_column='alleleId', null=True)),
                ('conflicting_pathogenicities', clickhouse_search.backend.fields.NestedField(base_fields=[('count', clickhouse_backend.models.UInt16Field()), ('pathogenicity', clickhouse_backend.models.Enum8Field(choices=[(0, 'Pathogenic'), (1, 'Pathogenic/Likely_pathogenic'), (2, 'Pathogenic/Likely_pathogenic/Established_risk_allele'), (3, 'Pathogenic/Likely_pathogenic/Likely_risk_allele'), (4, 'Pathogenic/Likely_risk_allele'), (5, 'Likely_pathogenic'), (6, 'Likely_pathogenic/Likely_risk_allele'), (7, 'Established_risk_allele'), (8, 'Likely_risk_allele'), (9, 'Conflicting_classifications_of_pathogenicity'), (10, 'Uncertain_risk_allele'), (11, 'Uncertain_significance/Uncertain_risk_allele'), (12, 'Uncertain_significance'), (13, 'No_pathogenic_assertion'), (14, 'Likely_benign'), (15, 'Benign/Likely_benign'), (16, 'Benign')]))], db_column='conflictingPathogenicities')),
                ('gold_stars', clickhouse_backend.models.UInt8Field(blank=True, db_column='goldStars', null=True)),
                ('submitters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField())),
                ('conditions', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField())),
                ('assertions', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.Enum8Field(choices=[(0, 'Affects'), (1, 'association'), (2, 'association_not_found'), (3, 'confers_sensitivity'), (4, 'drug_response'), (5, 'low_penetrance'), (6, 'not_provided'), (7, 'other'), (8, 'protective'), (9, 'risk_factor'), (10, 'no_classification_for_the_single_variant'), (11, 'no_classifications_from_unflagged_records')]))),
                ('pathogenicity', clickhouse_backend.models.Enum8Field(choices=[(0, 'Pathogenic'), (1, 'Pathogenic/Likely_pathogenic'), (2, 'Pathogenic/Likely_pathogenic/Established_risk_allele'), (3, 'Pathogenic/Likely_pathogenic/Likely_risk_allele'), (4, 'Pathogenic/Likely_risk_allele'), (5, 'Likely_pathogenic'), (6, 'Likely_pathogenic/Likely_risk_allele'), (7, 'Established_risk_allele'), (8, 'Likely_risk_allele'), (9, 'Conflicting_classifications_of_pathogenicity'), (10, 'Uncertain_risk_allele'), (11, 'Uncertain_significance/Uncertain_risk_allele'), (12, 'Uncertain_significance'), (13, 'No_pathogenic_assertion'), (14, 'Likely_benign'), (15, 'Benign/Likely_benign'), (16, 'Benign')])),
            ],
            options={
                'db_table': 'GRCh38/MITO/clinvar',
                'abstract': False,
                'engine': clickhouse_search.backend.engines.Join('ALL', 'LEFT', 'key', flatten_nested=0, join_use_nulls=1),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
