# Generated by Django 4.2.21 on 2025-08-06 00:31

import clickhouse_backend.models
import clickhouse_search.backend.fields
import clickhouse_search.backend.engines
from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('clickhouse_search', '0011_clinvar_materialized_view'),
    ]

    operations = [
        migrations.DeleteModel(
            name='AnnotationsDiskGcnv',
        ),
        migrations.DeleteModel(
            name='AnnotationsDiskMito',
        ),
        migrations.DeleteModel(
            name='AnnotationsDiskSv',
        ),
        migrations.DeleteModel(
            name='AnnotationsGcnv',
        ),
        migrations.DeleteModel(
            name='AnnotationsMito',
        ),
        migrations.DeleteModel(
            name='AnnotationsSv',
        ),
        migrations.CreateModel(
            name='AnnotationsMito',
            fields=[
                ('key', clickhouse_search.backend.fields.UInt32FieldDeltaCodecField(primary_key=True, serialize=False)),
                ('xpos', clickhouse_backend.models.UInt64Field()),
                ('pos', clickhouse_backend.models.UInt32Field()),
                ('ref', clickhouse_backend.models.StringField()),
                ('alt', clickhouse_backend.models.StringField()),
                ('variant_id', clickhouse_backend.models.StringField(db_column='variantId')),
                ('rsid', clickhouse_backend.models.StringField(blank=True, null=True)),
                ('lifted_over_pos', clickhouse_backend.models.UInt32Field(blank=True, db_column='liftedOverPos', null=True)),
                ('common_low_heteroplasmy', clickhouse_backend.models.BoolField(blank=True, db_column='commonLowHeteroplasmy', null=True)),
                ('mitomap_pathogenic', clickhouse_backend.models.BoolField(blank=True, db_column='mitomapPathogenic', null=True)),
                ('predictions', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('apogee', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('haplogroup_defining', clickhouse_backend.models.BoolField(null=True, blank=True)), ('hmtvar', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mitotip', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'likely_pathogenic'), (1, 'possibly_pathogenic'), (2, 'possibly_benign'), (3, 'likely_benign')], null=True)), ('mut_taster', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'D'), (1, 'A'), (2, 'N'), (3, 'P')], null=True)), ('sift', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True)), ('mlc', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))])),
                ('populations', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('gnomad_mito', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('gnomad_mito_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))])), ('helix', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field())])), ('helix_heteroplasmy', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('max_hl', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9))]))])),
                ('sorted_transcript_consequences', clickhouse_search.backend.fields.NestedField(base_fields=[('aminoAcids', clickhouse_backend.models.StringField(blank=True, null=True)), ('biotype', clickhouse_backend.models.StringField(blank=True, null=True)), ('canonical', clickhouse_backend.models.UInt8Field(blank=True, null=True)), ('codons', clickhouse_backend.models.StringField(blank=True, null=True)), ('consequenceTerms', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True))), ('geneId', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsc', clickhouse_backend.models.StringField(blank=True, null=True)), ('hgvsp', clickhouse_backend.models.StringField(blank=True, null=True)), ('loftee', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('isLofNagnag', clickhouse_backend.models.BoolField(blank=True, null=True)), ('lofFilters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(blank=True, null=True)))])), ('majorConsequence', clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'transcript_ablation'), (2, 'splice_acceptor_variant'), (3, 'splice_donor_variant'), (4, 'stop_gained'), (5, 'frameshift_variant'), (6, 'stop_lost'), (7, 'start_lost'), (8, 'inframe_insertion'), (9, 'inframe_deletion'), (10, 'missense_variant'), (11, 'protein_altering_variant'), (12, 'splice_donor_5th_base_variant'), (13, 'splice_region_variant'), (14, 'splice_donor_region_variant'), (15, 'splice_polypyrimidine_tract_variant'), (16, 'incomplete_terminal_codon_variant'), (17, 'start_retained_variant'), (18, 'stop_retained_variant'), (19, 'synonymous_variant'), (20, 'coding_sequence_variant'), (21, 'mature_miRNA_variant'), (22, '5_prime_UTR_variant'), (23, '3_prime_UTR_variant'), (24, 'non_coding_transcript_exon_variant'), (25, 'intron_variant'), (26, 'NMD_transcript_variant'), (27, 'non_coding_transcript_variant'), (28, 'coding_transcript_variant'), (29, 'upstream_gene_variant'), (30, 'downstream_gene_variant'), (31, 'intergenic_variant'), (32, 'sequence_variant')], null=True)), ('transcriptId', clickhouse_backend.models.StringField()), ('transcriptRank', clickhouse_backend.models.UInt8Field())], db_column='sortedTranscriptConsequences', group_by_key='geneId')),
            ],
            options={
                'db_table': 'GRCh38/MITO/annotations_memory',
                'engine': clickhouse_search.backend.engines.Join('ALL', 'INNER', 'key', join_use_nulls=1, flatten_nested=0),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationsSv',
            fields=[
                ('key', clickhouse_search.backend.fields.UInt32FieldDeltaCodecField(primary_key=True, serialize=False)),
                ('xpos', clickhouse_backend.models.UInt64Field()),
                ('chrom', clickhouse_search.backend.fields.Enum8Field(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])),
                ('pos', clickhouse_backend.models.UInt32Field()),
                ('end', clickhouse_backend.models.UInt32Field()),
                ('rg37_locus_end', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('contig', clickhouse_backend.models.Enum8Field(null=True, blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])), ('position', clickhouse_backend.models.UInt32Field(null=True, blank=True))], db_column='rg37LocusEnd')),
                ('variant_id', clickhouse_backend.models.StringField(db_column='variantId')),
                ('lifted_over_chrom', clickhouse_search.backend.fields.Enum8Field(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')], db_column='liftedOverChrom', null=True)),
                ('lifted_over_pos', clickhouse_backend.models.UInt32Field(blank=True, db_column='liftedOverPos', null=True)),
                ('algorithms', clickhouse_backend.models.StringField(low_cardinality=True)),
                ('bothsides_support', clickhouse_backend.models.BoolField(db_column='bothsidesSupport')),
                ('cpx_intervals', clickhouse_search.backend.fields.NestedField(base_fields=[('chrom', clickhouse_backend.models.Enum8Field(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])), ('start', clickhouse_backend.models.UInt32Field()), ('end', clickhouse_backend.models.UInt32Field()), ('type', clickhouse_backend.models.Enum8Field(choices=[(1, 'gCNV_DEL'), (2, 'gCNV_DUP'), (3, 'BND'), (4, 'CPX'), (5, 'CTX'), (6, 'DEL'), (7, 'DUP'), (8, 'INS'), (9, 'INV'), (10, 'CNV')]))], db_column='cpxIntervals')),
                ('end_chrom', clickhouse_backend.models.Enum8Field(null=True, blank=True, db_column='endChrom', choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])),
                ('sv_source_detail', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('chrom', clickhouse_backend.models.Enum8Field(null=True, blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')]))], db_column='svSourceDetail')),
                ('sv_type', clickhouse_search.backend.fields.Enum8Field(choices=[(1, 'gCNV_DEL'), (2, 'gCNV_DUP'), (3, 'BND'), (4, 'CPX'), (5, 'CTX'), (6, 'DEL'), (7, 'DUP'), (8, 'INS'), (9, 'INV'), (10, 'CNV')], db_column='svType')),
                ('sv_type_detail', clickhouse_backend.models.Enum8Field(null=True, blank=True, choices=[(1, 'INS_iDEL'), (2, 'INVdel'), (3, 'INVdup'), (4, 'ME'), (5, 'ME:ALU'), (6, 'ME:LINE1'), (7, 'ME:SVA'), (8, 'dDUP'), (9, 'dDUP_iDEL'), (10, 'delINV'), (11, 'delINVdel'), (12, 'delINVdup'), (13, 'dupINV'), (14, 'dupINVdel'), (15, 'dupINVdup')], db_column='svTypeDetail')),
                ('predictions', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('strvctvre', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))])),
                ('populations', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('gnomad_svs', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('het', clickhouse_backend.models.UInt32Field()), ('hom', clickhouse_backend.models.UInt32Field()), ('id', clickhouse_backend.models.StringField())]))])),
                ('sorted_gene_consequences', clickhouse_search.backend.fields.NestedField(base_fields=[('geneId', clickhouse_backend.models.StringField(blank=True, null=True)), ('majorConsequence', clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'LOF'), (2, 'INTRAGENIC_EXON_DUP'), (3, 'PARTIAL_EXON_DUP'), (4, 'COPY_GAIN'), (5, 'DUP_PARTIAL'), (6, 'MSV_EXON_OVERLAP'), (7, 'INV_SPAN'), (8, 'UTR'), (9, 'PROMOTER'), (10, 'TSS_DUP'), (11, 'BREAKEND_EXONIC'), (12, 'INTRONIC'), (13, 'NEAREST_TSS')], null=True))], db_column='sortedGeneConsequences')),
            ],
            options={
                'db_table': 'GRCh38/SV/annotations_memory',
                'engine': clickhouse_search.backend.engines.Join('ALL', 'INNER', 'key', join_use_nulls=1, flatten_nested=0),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationsGcnv',
            fields=[
                ('key', clickhouse_search.backend.fields.UInt32FieldDeltaCodecField(primary_key=True, serialize=False)),
                ('xpos', clickhouse_backend.models.UInt64Field()),
                ('chrom', clickhouse_search.backend.fields.Enum8Field(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])),
                ('pos', clickhouse_backend.models.UInt32Field()),
                ('end', clickhouse_backend.models.UInt32Field()),
                ('rg37_locus_end', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('contig', clickhouse_backend.models.Enum8Field(null=True, blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')])), ('position', clickhouse_backend.models.UInt32Field(null=True, blank=True))], db_column='rg37LocusEnd')),
                ('variant_id', clickhouse_backend.models.StringField(db_column='variantId')),
                ('lifted_over_chrom', clickhouse_search.backend.fields.Enum8Field(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12'), (13, '13'), (14, '14'), (15, '15'), (16, '16'), (17, '17'), (18, '18'), (19, '19'), (20, '20'), (21, '21'), (22, '22'), (23, 'X'), (24, 'Y'), (25, 'M')], db_column='liftedOverChrom', null=True)),
                ('lifted_over_pos', clickhouse_backend.models.UInt32Field(blank=True, db_column='liftedOverPos', null=True)),
                ('num_exon', clickhouse_backend.models.UInt16Field(db_column='numExon')),
                ('sv_type', clickhouse_search.backend.fields.Enum8Field(choices=[(1, 'gCNV_DEL'), (2, 'gCNV_DUP'), (3, 'BND'), (4, 'CPX'), (5, 'CTX'), (6, 'DEL'), (7, 'DUP'), (8, 'INS'), (9, 'INV'), (10, 'CNV')], db_column='svType')),
                ('predictions', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('strvctvre', clickhouse_backend.models.DecimalField(blank=True, decimal_places=5, max_digits=9, null=True))])),
                ('populations', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('sv_callset', clickhouse_search.backend.fields.NamedTupleField(base_fields=[('ac', clickhouse_backend.models.UInt32Field()), ('af', clickhouse_backend.models.DecimalField(decimal_places=5, max_digits=9)), ('an', clickhouse_backend.models.UInt32Field()), ('het', clickhouse_backend.models.UInt32Field()), ('hom', clickhouse_backend.models.UInt32Field())]))])),
                ('sorted_gene_consequences', clickhouse_search.backend.fields.NestedField(base_fields=[('geneId', clickhouse_backend.models.StringField(blank=True, null=True)), ('majorConsequence', clickhouse_backend.models.Enum8Field(blank=True, choices=[(1, 'LOF'), (2, 'INTRAGENIC_EXON_DUP'), (3, 'PARTIAL_EXON_DUP'), (4, 'COPY_GAIN'), (5, 'DUP_PARTIAL'), (6, 'MSV_EXON_OVERLAP'), (7, 'INV_SPAN'), (8, 'UTR'), (9, 'PROMOTER'), (10, 'TSS_DUP'), (11, 'BREAKEND_EXONIC'), (12, 'INTRONIC'), (13, 'NEAREST_TSS')], null=True))], db_column='sortedGeneConsequences')),
            ],
            options={
                'db_table': 'GRCh38/GCNV/annotations_memory',
                'engine': clickhouse_search.backend.engines.Join('ALL', 'INNER', 'key', join_use_nulls=1, flatten_nested=0),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
