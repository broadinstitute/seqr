# Generated by Django 4.2.21 on 2025-06-13 02:50

import clickhouse_backend.models
import clickhouse_search.backend.engines
import clickhouse_search.backend.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('clickhouse_search', '0004_annotationsdisksv_annotationssv_entriessv'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntriesGcnv',
            fields=[
                ('key', models.ForeignKey(db_column='key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='clickhouse_search.annotationsgcnv')),
                ('project_guid', clickhouse_backend.models.StringField(low_cardinality=True)),
                ('family_guid', clickhouse_backend.models.StringField()),
                ('xpos', clickhouse_search.backend.fields.UInt64FieldDeltaCodecField()),
                ('filters', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(low_cardinality=True))),
                ('calls', clickhouse_backend.models.ArrayField(base_field=clickhouse_search.backend.fields.NamedTupleField(base_fields=[('sampleId', clickhouse_backend.models.StringField()), ('gt', clickhouse_backend.models.Enum8Field(blank=True, choices=[(0, 'REF'), (1, 'HET'), (2, 'HOM')], null=True)), ('cn', clickhouse_backend.models.UInt8Field(blank=True, null=True)), ('qs', clickhouse_backend.models.UInt16Field(blank=True, null=True)), ('defragged', clickhouse_backend.models.BoolField(blank=True, null=True)), ('start', clickhouse_backend.models.UInt32Field(blank=True, null=True)), ('end', clickhouse_backend.models.UInt32Field(blank=True, null=True)), ('numExon', clickhouse_backend.models.UInt16Field(blank=True, null=True)), ('geneIds', clickhouse_backend.models.ArrayField(base_field=clickhouse_backend.models.StringField(blank=True, null=True))), ('newCall', clickhouse_backend.models.BoolField(blank=True, null=True)), ('prevCall', clickhouse_backend.models.BoolField(blank=True, null=True)), ('prevOverlap', clickhouse_backend.models.BoolField(blank=True, null=True))]))),
                ('sign', clickhouse_backend.models.Int8Field()),
            ],
            options={
                'db_table': 'GRCh38/GCNV/entries',
                'abstract': False,
                'engine': clickhouse_search.backend.engines.CollapsingMergeTree('sign', deduplicate_merge_projection_mode='rebuild', index_granularity=8192, order_by=('project_guid', 'family_guid', 'key'), partition_by='project_guid'),
                'projection': clickhouse_search.models.Projection('xpos_projection', order_by='xpos'),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_overwrite_base_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
