kind: Service
apiVersion: v1
metadata:
  name: postgres
  labels:
    name: postgres
    namespace: {{ NAMESPACE }}
    deployment: {{ DEPLOY_TO }}
spec:
  ports:
  - port: {{ POSTGRES_SERVICE_PORT }}
  selector:
    name: postgres
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres
  namespace: {{ NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/opaque-ports: "5432"
      labels:
        name: postgres
        deployment: {{ DEPLOY_TO }}
    spec:
      priorityClassName: high-priority
      volumes:
      - name: postgres-dbpath
        gcePersistentDisk:
          # This disk must already exist.
          pdName: {{ CLUSTER_NAME }}-postgres-disk
          fsType: ext4
      containers:
      - name: postgres-pod
        ports:
        - containerPort: {{ POSTGRES_SERVICE_PORT }}
          protocol: TCP
        imagePullPolicy: {{ IMAGE_PULL_POLICY }}
        image: {{ DOCKER_IMAGE_PREFIX }}/postgres{{ DOCKER_IMAGE_TAG }}
        resources:
          requests:
            memory: "0.5Gi"
            cpu: "0.01"
          limits:
            memory: "1Gi"
            cpu: "2"
        env:
        - name: POSTGRES_USER
          value: "{{ POSTGRES_USERNAME }}"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        readinessProbe:
          exec:
            command:
            - pg_isready
        volumeMounts:
        - name: postgres-dbpath
          mountPath: /var/lib/postgresql/data
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      nodeSelector:
        cloud.google.com/gke-nodepool: 'default-pool'
